# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  subscription: Visual Studio Enterprise Subscription – MPN(c6887f08-d52a-4ffc-a0ca-623e182be993)
  resourceGroup: terraops-rg
  storageAccount: terraopsa
  container: tfstate
  tfstateFile: terraops.tfstate
  anyTfChanges: false

stages:
  task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.14'

  task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Visual Studio Enterprise Subscription – MPN(c6887f08-d52a-4ffc-a0ca-623e182be993)'
    backendAzureRmResourceGroupName: 'terraops-rg'
    backendAzureRmStorageAccountName: 'terraopsa'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraops.tfstate'
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '-out=tfplan'
    environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription – MPN(c6887f08-d52a-4ffc-a0ca-623e182be993)
    provider: 'azurerm'
    command: 'apply'
    commandOptions: 'tfplan'
    environmentServiceNameAzureRM: 'Visual Studio Enterprise Subscription – MPN(c6887f08-d52a-4ffc-a0ca-623e182be993)'
